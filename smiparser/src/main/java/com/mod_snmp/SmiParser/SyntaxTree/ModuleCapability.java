//
// Generated by JTB 1.2.2++
//

package com.mod_snmp.SmiParser.SyntaxTree;

/**
 * Grammar production:
 * <PRE>
 *  -> &lt;SUPPORTS_T&gt;
 * module_id -> ModuleIdentifier()
 * -> &lt;INCLUDES_T&gt;
 * -> &lt;LEFT_BRACE_T&gt;
 * object_list -> ObjectList()
 * -> &lt;RIGHT_BRACE_T&gt;
 * variation_part -> ( VariationPart() )*
 * </PRE>
 */
public class ModuleCapability implements Node {
    private Node parent;
    public ModuleIdentifier module_id;
    public NodeList object_list;
    public NodeList variation_part;

    public ModuleCapability(ModuleIdentifier n0, NodeList n1, NodeList n2) {
        module_id = n0;
        if ( module_id != null ) module_id.setParent(this);
        object_list = n1;
        if ( object_list != null ) object_list.setParent(this);
        variation_part = n2;
        if ( variation_part != null ) variation_part.setParent(this);
    }
    public int line() {
        return module_id.line();
    }
    public void accept(com.mod_snmp.SmiParser.Visitor.Visitor v) {
        v.visit(this);
    }
    public Object accept(com.mod_snmp.SmiParser.Visitor.ObjectVisitor v, Object argu) {
        return v.visit(this,argu);
    }
    public void setParent(Node n) { parent = n; }
    public Node getParent()       { return parent; }
}

