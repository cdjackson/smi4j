//
// Generated by JTB 1.2.2++
//

package com.mod_snmp.SmiParser.SyntaxTree;

/**
 * Grammar production:
 * <PRE>
 * -> NumericValue() &lt;UNTIL_T&gt; NumericValue()
 * begin -> NumericValue()
 * end -> NumericValue()
 * </PRE>
 */
public class RangeItem implements Node {
    private Node parent;
    public NumericValue begin;
    public NodeOptional end;

    public RangeItem(NumericValue n0) {
        begin = n0;
        if ( begin != null ) begin.setParent(this);
        end = new NodeOptional();
    }
    public RangeItem(NumericValue n0, NumericValue n1) {
        this(n0);
        end.addNode(n1);
    }
    public void addEndNumber(NumericValue n0) {
        end.addNode(n0);
    }
    public int line() {
        return begin.line();
    }
    public long getFirstValue() {
        return begin.getValue();
    }
    public long getLastValue() {
        if (end.present()) {
            return ((NumericValue)end.node).getValue();
        }
        return begin.getValue();
    }
    public String toString() {
        return begin.toString();
    }
    public void accept(com.mod_snmp.SmiParser.Visitor.Visitor v) {
        v.visit(this);
    }
    public Object accept(com.mod_snmp.SmiParser.Visitor.ObjectVisitor v, Object argu) {
        return v.visit(this,argu);
    }
    public void setParent(Node n) { parent = n; }
    public Node getParent()       { return parent; }
}

