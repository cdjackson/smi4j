//
// Generated by JTB 1.2.2++
//

package com.mod_snmp.SmiParser.SyntaxTree;

/**
 * Grammar production:
 * <PRE>
 * -> &lt;IMPLIED_T&gt;
 * identifier -> Identifier()
 * </PRE>
 */
public class Index implements Node {
    private Node parent;
    public Identifier identifier;
    private boolean implied;
    private int level;

    public Index(Identifier n0, boolean n1) {
        identifier = n0;
        if ( identifier != null ) identifier.setParent(this);
        implied = n1;
        level = 0;
    }
    public int line() {
        return identifier.line();
    }
    public String toString() {
        if (implied) {
            return "IMPLIED" + identifier.toString();
        }
        return identifier.toString();
    }
    public boolean isImplied() {
        return implied;
    }
    public void setIndexLevel(int i) {
        if (i > level) {
            level = i;
        }
    }
    public int getIndexLevel() {
        return level;
    }
    public void accept(com.mod_snmp.SmiParser.Visitor.Visitor v) {
        v.visit(this);
    }
    public Object accept(com.mod_snmp.SmiParser.Visitor.ObjectVisitor v, Object argu) {
        return v.visit(this,argu);
    }
    public void setParent(Node n) { parent = n; }
    public Node getParent()       { return parent; }
}

